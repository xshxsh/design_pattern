工厂方法模式的主要角色如下。
抽象工厂（Abstract Factory）：提供了创建产品的接口，调用者通过它访问具体工厂的工厂方法 newProduct() 来创建产品。
具体工厂（ConcreteFactory）：主要是实现抽象工厂中的抽象方法，完成具体产品的创建。
抽象产品（Product）：定义了产品的规范，描述了产品的主要特性和功能。
具体产品（ConcreteProduct）：实现了抽象产品角色所定义的接口，由具体工厂来创建，它同具体工厂之间一一对应。

抽象工厂模式的扩展有一定的“开闭原则”倾斜性：
    当增加一个新的产品族时只需增加一个新的具体工厂，不需要修改原代码，满足开闭原则。
    当产品族中需要增加一个新种类的产品时，则所有的工厂类都需要进行修改，不满足开闭原则。
    另一方面，当系统中只存在一个等级结构的产品时，抽象工厂模式将退化到工厂方法模式。

适用场景：
农场，可以养动物，如养马、养牛；还可以培养植物，如种菜、种水果等

